worker_processes  auto;
worker_rlimit_nofile 20000;

events {
  worker_connections  9000;
  use epoll;
  multi_accept on;
}

http {

  keepalive_timeout 60;
  keepalive_requests 100000;

  sendfile on;
  tcp_nodelay on;

  proxy_read_timeout 2m;

  client_header_timeout  2m;
  client_body_timeout    2m;
  send_timeout           2m;
  reset_timedout_connection on;

  server_tokens off;

  ## To cache content
  proxy_cache_path /tmp/nginx levels=1:2 keys_zone=my_zone:10m inactive=30m;
  proxy_cache_key "$scheme$request_method$host$request_uri";
  proxy_cache_min_uses 5;

  open_file_cache max=5000 inactive=5m;
  open_file_cache_valid 2m;
  open_file_cache_min_uses 3;
  open_file_cache_errors off;

  gzip on;
  gzip_min_length  1000;
  gzip_types       application/x-javascript text/css application/javascript text/javascript text/plain text/xml application/json application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/xml font/eot font/opentype font/otf image/svg+xml;
  gzip_proxied     expired no-cache no-store private auth;
  gzip_disable "MSIE [1-6]\.";

  upstream hector.mysite {
      least_conn;

      # I'd rather use a weight load balancing on which the weight dynamically changes
      # based on the performance of each server cause it depends on the site.
      # us-pro-host01.ext.cabify.com us-pro-host02.ext.cabify.com
      #server us-pro-host01.ext.cabify.com;
      #server us-pro-host02.ext.cabify.com;
      #server us-pro-host03.ext.cabify.com;
      server 192.168.50.32:3001 max_fails=3 fail_timeout=10s;
      server 192.168.50.33:3001 max_fails=3 fail_timeout=10s;
      server 192.168.50.34:3001 max_fails=3 fail_timeout=10s;
  }

  server {
    listen 80;
    server_name _;
    rewrite ^ https://$host$request_uri? permanent;
  }

  server {
      listen 9090; # for testing
      listen 443 ssl;
      server_name hector.mysite www.hector.mysite;

      ssl off;
      ssl_certificate         /etc/nginx/ssl/server.crt;
      ssl_certificate_key     /etc/nginx/ssl/server.key;

      ssl_session_cache shared:SSL:20m;
      ssl_session_timeout 6m;

      ssl_prefer_server_ciphers       on;
      ssl_protocols                   TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers                     ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

      add_header Strict-Transport-Security "max-age=31536000" always;

      location / {
          proxy_cache my_zone;
          add_header X-Proxy-Cache $upstream_cache_status;
          add_header Cache-Control "public";

          proxy_pass http://hector.mysite;

          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }
  }
}
